[{"title":"hexo博客如何发布到github上？","date":"2019-05-30T03:11:50.450Z","path":"2019/05/30/hexo-02/","text":"确保hexo文件都编写完成后，开始注册github账号 1. 注册github账号GitHub 注册成功后，登录账号，点击右侧 “+” 号，然后点击 New repository 添加仓库，如图 ： 完成上述操作后，点击 Create repository 创建仓库。 仓库创建成功后，如图 ： 这里有两个地址，一个是 Https，一个是 SSH 。Https 每次提交都需要输入用户名和密码，SSH 只要添加了 SSH key 值，以后提交不需要输入用户名和密码。 12注 ： 这里创建的仓库名称必须为 username.github.io，username 替换成你的 github 用户名，每个账户有且只有一个仓库用来存放网页静态文件，这里名称是固定的。当创建其他仓库的时候，仓库名称可以自定义。 2. 检查本地是否有 SSH key12$ cd ~/.ssh$ ls 第一步是进入 .ssh 文件夹，第二步是显示 .ssh 文件下的文件夹及文件。如果 SSH key 存在，就会显示 id_rsa、id_rsa.pub、know_hosts 三个文件 。 没有也没关系，下面我们就来创建 SSH key $ ssh-keygen -t rsa -C &quot;你的邮箱&quot; 把 “你的邮箱” 替换成你真实的邮箱，然后点击回车。接着会让你输入文件名，点击回车直接忽略，接着会让输入两次密码，点击两次回车，直接设置为空，不用输入密码 。 创建成功后，可以通过如下命令拷贝 SSH key 的内容 ： $ clip &lt; ~/.ssh/id_rsa.pub&quot; 3. GitHub 添加 SSH key现在已拷贝了 SSH key 的内容，那么 GitHub 如何添加 SSH key 呢 ？点击右上角头像，然后点击Settings 。如图 ： 然后点击 New SSH key，如图 ： 把之前拷贝的内容粘贴到 key 里面，然后点击 Add SSH key，如图 ： 怎么去验证是否已经添加成功了呢 ？通过如下命令 ： $ ssh -T git@github.com 验证成功，如图 ： 4.修改hexo本地文件的配置找到hexo根文件目录下—&gt;_config.yml文件，用 Sublime Text 或 Editplus 打开进行编辑 1234deploy: type: git repository: https://github.com/Ayralee/Ayralee.github.io.git ##仓库地址 branch: master 仓库地址可以在你的github项目下，点击download之后，进行复制，如下图 仓库地址配置之后，这里需要先安装一个扩展插件 ： 1$ npm install hexo-deployer-git --save 插件安装成功后，再生成文件，提交仓库 12hexo g 生生静态文件hexo d 提交到远程仓库 最后，就可以在地址栏输入 http://username.github.io 访问我们的博客了，username 改成你的github 用户名。 5. 本地文件每次修改后要注意123每次编辑完文章后依次执行hexo g和hexo s,然后访问localhost:4000来预览效果没有问题了以后，执行hexo d来同步到GitHub。 多读书，多思考，生活更美好","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"hexo的配置与使用","date":"2019-05-29T14:41:42.469Z","path":"2019/05/29/hexo-01/","text":"如果你已经可以在本地localhost访问hexo,那么可以开始设置一些基本的配置，如下： 基本配置在Hexo中，有两个配置文件，一个是用来配置整站信息的，位于项目根目录下的_config.yml文件。另外一个是对主题的配置，位于themes目录下的_config.yml`文件。 注意 ：_config.yml文件可以用 Sublime Text或者 EditPlus 打开 先来看下项目根目录下的_config.yml文件，配置如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445# Sitetitle: 立炎的夏天 ## 站点名，站点左上角subtitle: 困难没有想象中的那么难，勇往直前走下去就对了！ ##副标题(类似个性签名)，站点左上角description: Leeyan ## 搜索引擎的关键词 有利于SEO的优化author: Leeyan ## 作者 会在页面最后一行显示language: zh-CN ## 语言设置# URL'url: http://yoursite.com ## 设置访问的域名root: /# Directory ## 默认文章和生成目录设置source_dir: sourcepublic_dir: public# Writingpost_asset_folder: true ## 图片无法显示(图片路径出现问题时)，需设置此项为truehighlight: ## 设置代码语法高亮，默认值一般不用改 enable: true line_number: true auto_detect: true tab_replace:# Category &amp; Tag ## 分类和标签设置category_map: 前端: web 阅读: life 笔记: note hexo: hexotag_map: - js //注意格式要写对：- 前面一个空格，后面一个空格 - html - css - git - webpack# Date / Time format ## 日期时间格式date_format: YYYY-MM-DDtime_format: HH:mm:ss# Home page setting ## 主页设置index_generator: path: '' per_page: 10 ## 每页显示的文章数 order_by: -date ## 文章的排列顺序 如果用了主题的话，需找到根目录—&gt;theme文件夹—&gt;BlueLake文件夹（你用的主题名字的文件夹）—&gt;_config.yml文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354# Theme version ## 主题的版本version: 2.0.3# Theme tone ## 主题的颜色深浅dark: false #true/false # Header ## 主页上的头部导航条设置menu: - page: 首页 directory: . icon: fa-home - page: 归档 directory: archives/ icon: fa-archive - page: 关于 directory: about/ icon: fa-user - page: 订阅 directory: atom.xml icon: fa-rss # Sidebar ## 侧边栏设置（默认值，一般不用更改）widgets: - recent_posts ## 文章目录 - category ## 分类 - tag ## 标签 - archive ## 归档 #- weibo ## 微博 - links ## 友情链接 links: ## 友情链接列表 - title: 微博 url: https://weibo.com/3357769260/profile?rightmod=1&amp;wvr=6&amp;mod=personinfo&amp;is_all=1 - title: github url: https://github.com/Ayralee - title: BlueLake主题 url: https://github.com/chaooo/hexo-theme-BlueLake # About pageabout: ## 关于页面的设置 photo_url: ## ./photo.jpg ## 头像 items: ## (主题的默认格式，要按照这个写，否则About页面不显示，已踩坑) - label: email icon: fa-email url: ## 18236975250@163.com title: 18236975250@163.com ## 设置邮箱 - label: weibo icon: fa-weibo url: ## https://weibo.com/u/3357769260/home?topnav=1&amp;wvr=6 title: 立炎的夏天 ## 设置微博 - label: github icon: fa-github url: ## https://github.com/Ayralee title: Ayralee ## 设置github 开始使用 打开DOS窗口,进入到hexo所在的根目录下，输入如下命令 1hexo n “firstlog” #引号里的是文件名，可以自己定义 在根目录下的source/_posts目录下找到刚才建立的firstlog.md文件，可以用sublime text或 Editplus等工具来编辑。 每个文章头部都要设置标题，分类，标签，如下： 12345678910title: Hello post #文章标题date: 2014-08-05 11:15:00 #发表时间 可写可省略categories: 前端 ##设置分类（要与_config.yml文件中设置的分类关键词一一对应）tags: [js,html,css] ##设置标签 //写法一tags: ##设置标签 //写法二 - hexo - js - html （两种写法都要与_config.yml文件中设置的标签关键词一一对应）---#下面是开始写正文，用markdown语法写即可。 markdown文件编写完成后，命令行窗口输入hexo g生成博客，再输入hexo s启动服务，地址栏输入：localhost:4000预览效果 没有问题了以后，执行hexo d发布博客，来同步到GitHub。 多读书，多思考，生活更美好","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"Markdown 基础语法","date":"2019-05-29T09:04:22.159Z","path":"2019/05/29/markdown/","text":"单行代码1`create database hero;` 多行代码12345678方法一 ```js 回车 即可生成多行代码块方法二(```) 代码... 代码... 代码...(```) 标题123456# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 字体1234**这是加粗的文字***这是倾斜的文字****这是斜体加粗的文字***~~这是加删除线的文字~~ 引用123&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 分割线1234-------******** 图片123456![图片alt](图片地址 ''图片title'')图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加eg:![区块链](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg\"区块链\") 1上传本地图片直接点击导航栏的图片标志，选择图片即可 超链接12[简书](http://jianshu.com)[百度](http://baidu.com) 无序列表12345- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格 有序列表123451.列表内容2.列表内容3.列表内容注意：序号跟内容之间要有空格 列表嵌套1上一级和下一级之间敲三个空格即可 表格1234567891011表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 123456eg:姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟 多读书，多思考，生活更美好","tags":[{"name":"markdown","slug":"markdown","permalink":"http://yoursite.com/tags/markdown/"}]},{"title":"git基础语法","date":"2019-05-29T08:56:46.470Z","path":"2019/05/29/git/","text":"什么是git? git是一款免费、开源的分布式 版本控制系统 ，用于敏捷高效地处理任何或小或大的项目。 1. git的安装下载地址 安装很简单，一直下一步即可。在任意的目录下右键，能够出现下图，表示安装成功了。 git的用法方式主要有两种： 12git gui 即图形化界面的方式git bash 命令行的方式 2. 基础方法1234567891011121314# 初始化git仓库，会在当前目录生成一个隐藏文件夹 .git 不要去修改这个文件夹下的任意东西。git init# 查看git的状态 ,如果此时新建一个文件，那么这个文件是没有被追踪的，说白了git还没有管理这个新建的文件git status # 将这个新建的文件添加到git的暂存区git add index.html# 将文件由暂存区提交到仓库区git commit -m '第一次提交'# 查看提交日志git log 3. 配置邮箱和用户名如果第一次使用git，会要求设置用户名和邮箱 12345678910111213# git config user.name 你的目标用户名# git config user.email 你的目标邮箱名# 这种配置方式只有在当前仓库生效git config user.name leeyangit config user.email leeyan@163.com# 可以使用--global参数，配置全局的用户名和邮箱，这样别的git仓库就不需要重新配置了。# 如果同时配置了局部的和全局的，那么局部的用户名和邮箱将会生效。git config --global user.name huccgit config --global user.email 111111@qq.com# 查看配置信息git config --list 4. SSH免登陆设置1234567891 创建SSH Key：ssh-keygen -t rsa2 在文件路径 C:\\用户\\当前用户名\\ 找到 .ssh 文件夹3 文件夹中有两个文件： 私钥：id_rsa 公钥：id_rsa.pub 4 在 github -&gt; settings -&gt; SSH and GPG keys页面中，新创建SSH key5 粘贴 公钥 id_rsa.pub 内容到对应文本框中6 在github中新建仓库或者使用现在仓库，拿到git@github.com:用户名/仓库名.git7 此后，再次SSH方式与github“通信”，不用输入密码确认身份了 5. 常用命令1234git add 文件名 ## 将文件从工作区添加到暂存区 git add --all 或者 git add -A（简写） 添加所有文件 git add a.txt b.txt 同时添加两个文件 git add *.js 添加当前目录下的所有js文件 git checkout 文件名 ## 将文件从暂存区恢复到工作区 12git commit ## 将文件从暂存区添加到仓库区 git commit -m \"提交说明\" git status ## 查看文件的状态 git log ## 查看提交日志 123456git reset ## 版本回退，将代码恢复到已经提交的某一个版本中。 it reset --hard 版本号 将代码回退到某个指定的版本(版本号只要有前几位即可) git reset --hard head~1将版本回退到上一次提交 ~1:上一次提交 ~2:上上次提交 ~0:当前提交 git 忽视文件 在仓库中，有些文件是不想被git管理的，比如数据的配置密码、写代码的一些思路等。git可以通过配置从而达到忽视掉一些文件，这样这些文件就可以不用提交了。 12345在仓库的根目录创建一个.gitignore的文件，文件名是固定的。将不需要被git管理的文件路径添加到.gitignore中index.txt ## 忽视index.txt文件.gitignore ## 忽视.gitignore文件css/index.js ## 忽视 css下的index.js文件 6. git 分支1234567git branch 分支名 ## 创建分支git branch ## 查看所有分支git checkout 分支名 ## 切换分支git merge 分支名 ## 合并分支 （要在master主分支上进行合并）git checkout -b 分支名 ##创建并切换到新分支git branch -d 分支名 ## 删除分支 (不能在当前分支删当前分支，要切换到其他分支才能删除) ## 注意：master主分支不建议删除 7. 远程仓库的操作12345678910111213141516git push ## 将本地代码提交到远程仓库 git push 仓库地址 master master必须写，不能省略 git push git@github.com:ayralee/test.git master 如果第一次使用，需要填写github的用户名和密码git pull ## 将远程仓库的项目下载到本地 git pull 项目地址 master 通常在push前，需要先pull一次。 git clone ## 克隆远程仓库的代码到本地 git clone 仓库地址 自定义本地仓库名 将整个仓库克隆到本地 git clone命令执行后，那么本地仓库会自动添加一个origin的远程地址，指向的就是克隆的远程地址 git remote ## 查看所有的仓库别名 git remote add 仓库别名 仓库地址 ##设置仓库别名代替仓库地址 git remote add leeyan https://github.com/Ayralee/Ayralee.github.io.git git remote remove leeyan ## 删除leeyan这个仓库别名 多读书，多思考，生活更美好","tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"hexo的安装","date":"2019-05-29T08:56:46.470Z","path":"2019/05/29/hexo/","text":"Hexo是什么？12Hexo 是一个基于Node.js的快速、简洁且高效的博客框架。可以使用Markdown语法编写文章，方便，快速的生成静态网页。我们可以将hexo创建的自己的博客，托管到github上。 安装前提1在安装前，必须检查电脑中是否已安装 node.js 和 git 首先，点击开始—&gt;运行—&gt;输入cmd—&gt;进入Dos窗口 123检查电脑是否安装了git？ 命令行输入 git -v检查电脑是否安装了node.js？ 命令行输入 node -v 注意：如果已经安装过该软件，会显示对应的安装软件版本，没有安装会提示 &quot;xx&quot; 不是内部命令或外部命令。 安装Node.js下载Node.js 安装git下载git Git 安装成功后，点击鼠标右键会发发现多了个两个选项，如图 ： 安装 hexo创建一个项目文件夹，打开后，右击git bash here,会弹出命令行窗口 安装hexo 123npm install -g hexohexo -v # 查看hexo的版本信息 初始化博客 1hexo init # 初始化 生成静态页面 12hexo generate # 生成静态页面 hexo g # 生成静态页面（简写） 启动服务 12hexo server # 启动服务hexo s # 启动服务（简写） 访问站点 http://localhost:4000/ # 在浏览器输入这个地址就可以访问了，如下图： hexo 常见命令 123456hexo -v ## 查看hexo的版本信息hexo n \"文章标题\" ## 创建一篇新文章hexo g ## 生成博客（生成静态文件）hexo d ## 发布博客（提交到远程仓库）hexo s ## 启动服务hexo clean ## 清除本地 public 文件 多读书，多思考，生活更美好","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"致自己","date":"2019-05-29T02:16:22.551Z","path":"2019/05/29/aboutme/","text":"### Tips123前路漫漫，不惧远行！嗯，我一定可以的。Anyway,我只是一个前端小白啦··· 多看书，多思考，生活更美好","tags":[{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"},{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"},{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"}]}]